---
- name: Copy apt.conf for proxing DEBs
  copy: src=proxy.apt.conf dest=/etc/apt/apt.conf

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
    state: present

- name: Install docker and its dependecies
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce 
    - docker-ce-cli 
    - containerd.io
  notify:
    - docker status

- name: Add vagrant user to docker group
  user:
    name: vagrant
    group: docker

- name: Set up docker daemon cgroup driver to systemd
  copy: src=docker-daemon.json dest=/etc/docker/daemon.json

- name: Create systemd's Docker service directory
  file: path=/etc/systemd/system/docker.service.d state=directory recurse=yes

- name: Restart docker service
  service:
    name: docker.service
    daemon_reload: yes
    state: restarted
  
- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet 
      - kubeadm 
      - kubectl

- name: IPtables, ARPtables, EBtables
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - iptables
      - arptables
      - ebtables

- name: Set legacy IPtables as default
  command: update-alternatives --set {{ item }} /usr/sbin/{{ item }}-legacy
  with_items:
  - iptables
  - ip6tables
  - arptables
  - ebtables

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted
  
